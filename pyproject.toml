[build-system]
requires = [
    "hatchling>=1.27.0",
    "hatch-semver"
]
build-backend = "hatchling.build"

[project]
name = "rtfparse"
description = "Tool to parse Microsoft Rich Text Format (RTF)"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
authors = [
  { name = "Sven Siegmund", email = "sven.siegmund@iav.de" },
]
classifiers = [
    #"Development Status :: 3 - Alpha",
    #"Development Status :: 4 - Beta",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
]
keywords = [
    "rtf",
    "parse",
]
dependencies = [
    "argcomplete",
    "extract-msg",
    "compressed_rtf",
    "provide_dir",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://github.com/fleetingbytes/rtfparse#readme"
Issues = "https://github.com/fleetingbytes/rtfparse/issues"
Source = "https://github.com/fleetingbytes/rtfparse"

[project.scripts]
rtfparse = "rtfparse.cli:main"

[tool.hatch.version]
path = "src/rtfparse/__about__.py"
validate-bump = true
scheme = "semver"

[tool.hatch.envs.default]
dependencies = [
  "pytest-cov",
]
[tool.hatch.envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/rtfparse --cov=tests {args}"
no-cov = "cov --no-cov {args}"

[tool.hatch.envs.style]
dependencies = [
    "ruff",
]

[tool.hatch.envs.style.scripts]
fmt = [
    "ruff format",
    "ruff check",
]

[tool.hatch.envs.tc]
dependencies = [
    "towncrier",
]

[tool.hatch.envs.tc.scripts]
draft = "towncrier build --draft"
build = "towncrier build --yes"

[tool.hatch.envs.docs]
dependencies = [
    "pdoc3"
]

[[tool.hatch.envs.test.matrix]]
python = ["311"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  #"src/rtfparse/__about__.py",
]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 150
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pycodestyle]
max-line-length = 150

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.towncrier]
name = "rtfparse"
package = "rtfparse"
package_dir = "src"
directory = "changelog.d"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
template = "changelog.d/changelog_template.jinja"
#title_format = "## [{version}](https://github.com/fleetingbytes/rtfparse/{version}) - {project_date}"
title_format = "## {version} ({project_date})"
issue_format = "[#{issue}](https://github.com/fleetingbytes/rtfparse/issues/{issue})"
orphan_prefix = "+"

[tool.towncrier.fragment.doc]
name = "Documentation"

[tool.towncrier.fragment.feature]
name = "New Features"

[tool.towncrier.fragment.improved]
name = "Improvements"

[tool.towncrier.fragment.fixed]
name = "Bugfixes"

[tool.towncrier.fragment.unimportant]
name = "Development Details"
